{"version":3,"sources":["context/cartContext.ts","components/wishlist/wishList.tsx","components/wishlist/index.tsx","functions/selectEqual.ts","components/modals/summary.tsx","components/modals/cartSummary.tsx","components/modals/finalCart.tsx","components/criteria/index.tsx","App.tsx","index.tsx"],"names":["CartContext","createContext","carts","setCarts","WishList","cart","approveCart","approveProduct","className","isApproved","id","isWellBehaved","xmlns","fill","stroke","viewBox","d","strokeLinecap","strokeLinejoin","strokeWidth","isInCart","products","length","onClick","stroke-linecap","stroke-linejoin","stroke-width","map","product","productId","src","image","alt","isFavourite","title","price","parseFloat","reduce","a","b","WishListArray","setCriteria","feedback","setFeedback","useContext","type","list","localStorage","getItem","JSON","parse","editedCarts","addedCarts","filter","findCart","oldCarts","e","selectMinProduct","mycart","MinProduct","indexOf","Math","min","Summary","findTotalNum","findTotalSum","filterFunction","useState","filterCarts","setFilterCarts","useEffect","filterArr","cartArr","i","axios","patch","response","data","toFixed","sum","j","applyDiscount","approvedCarts","productArr","cart_id","product_id","product_price","uniqueProductArr","Set","quantity","discount","CartSummary","approveCarts","discardCarts","FinalCart","setIsOpen","discardedCarts","displayApprovedCart","setDisplayApprovedCart","displayDiscardedCart","setDisplayDiscardedCart","x","y","displayApprove","displayDiscard","index1","index2","slideLeft","slideRight","Criterias","criteria","isOpen","Modal","setAppElement","optimizeEqualNumber","updatedCarts","selected","itemsArray","every","value","favourites","wellbehaved","onRequestClose","overlayClassName","App","loading","setLoading","getProduct","get","p","console","log","selectedCart","myCarts","arrLength","cartId","updateByProduct","cartData","productArray","val","setTimeout","updatedData","cartIndex","productIndex","setItem","stringify","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03c95f0b.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport { createContext } from 'react';\nconst CartContext = createContext({ carts: <ICart[]>[], setCarts: (carts: ICart[]): void => {} });\nexport default CartContext;\n","import React from 'react';\n\ninterface IWishListProps {\n    cart: ICart;\n    approveCart: (selectedCart: ICart) => void;\n    approveProduct: (productId: number, cartId: number) => void;\n}\n\nconst WishList: React.FC<IWishListProps> = ({ cart, approveCart, approveProduct }) => {\n    return (\n        <div className=\"border rounded shadow-lg text-xs divide-y h-100 w-106\">\n            <div\n                className={`flex flex-row justify-between items-center ${\n                    cart.isApproved ? 'bg-blue-800' : 'bg-blue-400'\n                } p-4 h-14`}\n            >\n                <div className=\"flex flex-row space-x-2\">\n                    <div className=\"text-base text-white\">Child {cart.id}</div>\n                    {cart.isWellBehaved ? (\n                        <svg\n                            className=\"w-6 h-6 bg-yellow-400 border rounded\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                        >\n                            <path fill=\"#fff\" d=\"M12 14l9-5-9-5-9 5 9 5z\" />\n                            <path\n                                fill=\"#fff\"\n                                d=\"M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z\"\n                            />\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222\"\n                            />\n                        </svg>\n                    ) : (\n                        <svg\n                            className=\"w-6 h-6 bg-yellow-400 border rounded invisible\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                        >\n                            <path fill=\"#fff\" d=\"M12 14l9-5-9-5-9 5 9 5z\" />\n                            <path\n                                fill=\"#fff\"\n                                d=\"M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z\"\n                            />\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222\"\n                            />\n                        </svg>\n                    )}\n                </div>\n                {cart.isInCart && cart.isApproved ? (\n                    <div>\n                        <svg\n                            className=\"w-6 h-6 text-white text-center\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\"\n                            />\n                        </svg>\n                    </div>\n                ) : (\n                    ''\n                )}\n\n                <div className=\"flex flex-row space-x-4 items-center\">\n                    {cart.isApproved ? (\n                        <div\n                            className={`flex flex-row space-x-1 items-center ${\n                                cart.products.length === 0 ? 'hidden' : 'block'\n                            }`}\n                        >\n                            <div className=\"text-xs text-white\">Click to deselect</div>\n                            <button\n                                onClick={() => approveCart(cart)}\n                                className=\"w-5 h-5 border rounded bg-white flex items-center justify-center focus:outline-none\"\n                            >\n                                <svg\n                                    className=\"w-5 h-5 text-blue-800\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    viewBox=\"0 0 24 24\"\n                                >\n                                    <path\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        strokeWidth=\"2\"\n                                        d=\"M5 13l4 4L19 7\"\n                                    />\n                                </svg>\n                            </button>\n                        </div>\n                    ) : (\n                        <div\n                            className={`flex flex-row space-x-1 items-center ${\n                                cart.products.length === 0 ? 'inivisible' : 'visible'\n                            }`}\n                        >\n                            <div className=\"text-xs text-white\">Click to select</div>\n                            <button\n                                onClick={() => approveCart(cart)}\n                                className=\"w-5 h-5 border rounded bg-white focus:outline-none\"\n                            ></button>\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className=\"grid grid-cols-4\">\n                <div\n                    className={`col-span-4 grid grid-cols-4 py-2 border-b bg-gray-100 justify-items-stretch ${\n                        cart.products.length === 0 ? 'hidden' : 'block'\n                    }`}\n                >\n                    <div className=\"col-span-3 justify-self-center\">Product</div>\n                    <div className=\"justify-self-center\">Price</div>\n                </div>\n\n                {cart.products.length === 0 ? (\n                    <div className=\"col-span-4 place-content-center row-span-2\">\n                        <div className=\"flex flex-row space-x-4 items-center justify-center\">\n                            <svg\n                                className=\"w-24 h-24 text-blue-800\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                fill=\"none\"\n                                stroke=\"currentColor\"\n                                viewBox=\"0 0 24 24\"\n                            >\n                                <path\n                                    stroke-linecap=\"round\"\n                                    stroke-linejoin=\"round\"\n                                    stroke-width=\"2\"\n                                    d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\"\n                                />\n                            </svg>\n                            <div className=\"text-base\">Empty</div>\n                        </div>\n                    </div>\n                ) : (\n                    ''\n                )}\n\n                <div className=\"divide-y col-span-4\">\n                    {cart.products.map((product) => (\n                        <div\n                            key={product.productId}\n                            className=\"p-2 grid grid-cols-4 justify-items-stretch place-items-center\"\n                        >\n                            {product.isApproved ? (\n                                <button\n                                    onClick={() => approveProduct(product.productId, cart.id)}\n                                    className=\"w-5 h-5 border rounded border-blue-400 shadow-lg bg-white focus:outline-none\"\n                                >\n                                    <svg\n                                        className=\"w-5 h-5 text-green-500\"\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        fill=\"none\"\n                                        stroke=\"currentColor\"\n                                        viewBox=\"0 0 24 24\"\n                                    >\n                                        <path\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                            strokeWidth=\"2\"\n                                            d=\"M5 13l4 4L19 7\"\n                                        />\n                                    </svg>\n                                </button>\n                            ) : (\n                                <button\n                                    onClick={() => approveProduct(product.productId, cart.id)}\n                                    className=\"w-5 h-5 border rounded shadow-lg border-blue-500 bg-white focus:outline-none\"\n                                ></button>\n                            )}\n                            <img src={product.image} alt=\"image\" className=\"w-1/2 justify-self-start\" />\n                            <div>\n                                {product.isFavourite ? (\n                                    <svg\n                                        className=\"w-4 h-4 fill-current text-yellow-400\"\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        viewBox=\"0 0 20 20\"\n                                    >\n                                        <path d=\"M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z\" />\n                                    </svg>\n                                ) : (\n                                    ''\n                                )}\n                                <div>{product.title}</div>\n                            </div>\n\n                            <div className=\"justify-self-center\">{product.price}</div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div\n                className={`relative col-span-4 grid grid-cols-4 place-items-center ${\n                    cart.products.length === 0 ? 'hidden' : 'block'\n                }`}\n            >\n                <div className=\"py-2 col-span-3\">Total price</div>\n                <div className=\"col-span-1\">\n                    {cart.products.length !== 0\n                        ? cart.products.map((product) => parseFloat(product.price)).reduce((a, b) => a + b)\n                        : ''}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WishList;\n","import React, { useContext } from 'react';\nimport CartContext from '../../context/cartContext';\nimport WishList from './wishList';\n\nconst WishListArray: React.FC<IComponentProps> = ({\n    setCriteria,\n    feedback,\n    setFeedback,\n    approveProduct,\n    approveCart\n}): JSX.Element => {\n    const { carts, setCarts } = useContext(CartContext);\n\n    // clears all selections and clears carts\n    const resetCarts = () => {\n        const list = localStorage.getItem('CartList');\n        list ? setCarts(JSON.parse(list)) : '';\n        setFeedback('All wishlists and product selections cleared ');\n    };\n\n    // selects all carts and their items\n\n    const approveAll = () => {\n        const editedCarts = carts.map((cart) => ({\n            ...cart,\n            isApproved: true,\n            products: cart.products.map((product) => ({ ...product, isApproved: true }))\n        }));\n        setCarts([...editedCarts]);\n        setCriteria('');\n        setFeedback('All wishlists and their products selected');\n    };\n\n    // adds selected wishlists to cart\n    const addToCart = () => {\n        const addedCarts = carts.map((cart) =>\n            cart.isApproved === true ? { ...cart, isInCart: true } : { ...cart, isInCart: false }\n        );\n        addedCarts.filter((cart) => cart.isInCart === true).length !== 0\n            ? setFeedback('Added selected wishlist to cart')\n            : setFeedback('Error!! Wishlist not added to cart. Select at least 1 wishlist');\n\n        setCarts([...addedCarts]);\n        setCriteria('');\n    };\n\n    return (\n        <div className=\"flex flex-col space-y-6\">\n            <div className=\"flex flex-row items-center space-x-4 mx-10\">\n                <div className=\"flex flex-row space-x-4\">\n                    <button\n                        type=\"button\"\n                        onClick={resetCarts}\n                        className=\"p-2 text-red-500 hover:bg-red-500 hover:text-white text-sm border-red-500 w-20 text-white border rounded shadow-lg focus:outline-none\"\n                    >\n                        Reset\n                    </button>\n                    <button\n                        type=\"button\"\n                        onClick={approveAll}\n                        className=\"p-2 text-blue-400 hover:bg-blue-800 hover:text-white  text-sm w-20 border rounded shadow-lg border-blue-400 hover:border-blue-800 focus:outline-none\"\n                    >\n                        Select all\n                    </button>\n                    <button\n                        type=\"button\"\n                        onClick={addToCart}\n                        className=\"p-2 hover:bg-blue-800 hover:text-white w-20 text-sm text-blue-400 border border-blue-400 hover:border-blue-800 rounded shadow-lg focus:outline-none\"\n                    >\n                        {' '}\n                        Add\n                    </button>\n                </div>\n                <div className=\"text-sm text-red-500\">{feedback}</div>\n            </div>\n            <div className=\"grid sm:grid-cols-1 lg:grid-cols-2 2xl:grid-cols-3 gap-x-4 gap-y-4 mx-10\">\n                {carts\n                    ? [...carts].map((cart) => (\n                          <div key={cart.id}>\n                              <WishList cart={cart} approveCart={approveCart} approveProduct={approveProduct} />\n                          </div>\n                      ))\n                    : ''}\n            </div>\n        </div>\n    );\n};\n\nexport default WishListArray;\n","// finds index of the product with minimum price from a list of products\n\nexport const findIndex = (products: IProduct[]): number => {\n    const index = products\n        .map((product) => parseFloat(product.price))\n        .indexOf(Math.min(...products.map((product) => parseFloat(product.price))));\n    return index;\n};\n// finds a cart from an array of carts\nexport const findCart = (cart: ICart, oldCarts: ICart[]): ICart => {\n    const foundCart = oldCarts.filter((e) => e.id === cart.id)[0];\n    return foundCart;\n};\n\n//selects the product with minimum or maximum value inside a cart in an array of carts\nexport const selectMinProduct = (mycart: ICart, oldCarts: ICart[]): ICart[] => {\n    const MinProduct = findCart(mycart, oldCarts)\n        .products.filter((product) => product.isApproved === false)\n        .filter(\n            (product) => product === findCart(mycart, oldCarts).products[findIndex(findCart(mycart, oldCarts).products)]\n        );\n    const selected = oldCarts.map((cart) =>\n        cart.id === mycart.id\n            ? {\n                  ...cart,\n                  products: cart.products.map((product) =>\n                      product.productId === MinProduct[0].productId\n                          ? { ...product, isApproved: true }\n                          : { ...product, isApproved: false }\n                  )\n              }\n            : { ...cart }\n    );\n\n    return selected;\n};\n","import axios from 'axios';\nimport React, { useEffect, useContext, useState } from 'react';\nimport CartContext from '../../context/cartContext';\n\nconst Summary: React.FC<ISummaryProps> = ({ findTotalNum, findTotalSum, filterFunction, isApproved }) => {\n    const { carts } = useContext(CartContext);\n    const [filterCarts, setFilterCarts] = useState<ICart[]>([]);\n\n    useEffect(() => {\n        const filterArr = filterFunction();\n        // get data from fakestore api\n        (async () => {\n            let cartArr: ICart[] = [];\n            for (let i = 0; i < filterArr.length; i++) {\n                const response = await axios.patch(`https://fakestoreapi.com/carts/${filterArr[i].id}`, {\n                    ...filterArr[i]\n                });\n                cartArr = [...cartArr, { ...response.data }];\n            }\n            setFilterCarts([...cartArr]);\n        })();\n    }, [carts]);\n\n    return (\n        <div>\n            <div className=\"bg-blue-800 text-white col-span-3 p-2 text-base\">\n                {isApproved ? 'Approved cart' : 'Discarded cart'}\n            </div>\n            <div className=\"grid grid-cols-3 justify-items-stretch border shadow-lg divide-y\">\n                <div className=\"col-span-3 grid grid-cols-3 bg-gray-200 w-full p-1 font-medium\">\n                    <div>Name</div>\n                    <div>Gifts</div>\n                    <div>Sum</div>\n                </div>\n                {filterCarts.map((cart) => (\n                    <div className=\"col-span-3 grid grid-cols-3 p-1\">\n                        <div>Child {cart.id}</div>\n                        <div>{cart.products.length}</div>\n                        <div>\n                            {cart.products.length !== 0\n                                ? cart.products.map((product) => parseFloat(product.price)).reduce((a, b) => a + b)\n                                : ''}\n                        </div>\n                    </div>\n                ))}\n                <div className=\"col-span-3 grid grid-cols-3 bg-gray-200 w-full p-1 font-medium\">\n                    <div>Total :</div>\n                    <div>{filterCarts.length !== 0 ? findTotalNum(filterCarts) : ''}</div>\n\n                    <div>{filterCarts.length !== 0 ? findTotalSum(filterCarts).toFixed(2) : ''}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Summary;\n","import React from 'react';\nimport Summary from './summary';\n\nconst findTotalNum = (carts: ICart[]) => {\n    const num = carts.map((cart) => (cart.products.length !== 0 ? cart.products.length : 0)).reduce((a, b) => a + b);\n    return num;\n};\nconst findTotalSum = (carts: ICart[]) => {\n    let sum = 0;\n    for (let i = 0; i < carts.length; i++) {\n        for (let j = 0; j < carts[i].products.length; j++) {\n            sum = sum + parseFloat(carts[i].products[j].price);\n        }\n    }\n    return sum;\n};\n\n// applies discount to approved carts\nconst applyDiscount = (approvedCarts: ICart[]) => {\n    let productArr: number[] = [];\n    let cartArr: ICartArr[] = [];\n    for (let i = 0; i < approvedCarts.length; i++) {\n        for (let j = 0; j < approvedCarts[i].products.length; j++) {\n            cartArr = [\n                ...cartArr,\n                {\n                    cart_id: approvedCarts[i].id,\n                    product_id: approvedCarts[i].products[j].productId,\n                    product_price: parseFloat(approvedCarts[i].products[j].price)\n                }\n            ];\n            productArr = [...productArr, approvedCarts[i].products[j].productId];\n        }\n    }\n    const uniqueProductArr = [...new Set(productArr)].map((product) => ({\n        product_id: product,\n        quantity: 0,\n        sum: 0\n    }));\n\n    for (let i = 0; i < uniqueProductArr.length; i++) {\n        for (let j = 0; j < cartArr.length; j++) {\n            if (cartArr[j].product_id === uniqueProductArr[i].product_id) {\n                uniqueProductArr[i].quantity += 1;\n                uniqueProductArr[i].sum += cartArr[j].product_price;\n            }\n        }\n    }\n    let discount = 0;\n    for (let i = 0; i < uniqueProductArr.length - 1; i++) {\n        if (uniqueProductArr[i].quantity > 1) {\n            discount += uniqueProductArr[i].sum * (uniqueProductArr[i].quantity * 0.1);\n        }\n    }\n    return discount;\n};\n\nconst CartSummary: React.FC<ICartSummaryProps> = ({ approveCarts, discardCarts, approvedCarts }) => {\n    return (\n        <div className=\"text-sm mx-4 flex flex-col space-y-4 mb-4\">\n            <Summary\n                findTotalNum={findTotalNum}\n                findTotalSum={findTotalSum}\n                filterFunction={approveCarts}\n                isApproved={true}\n            />\n            <Summary\n                findTotalNum={findTotalNum}\n                findTotalSum={findTotalSum}\n                filterFunction={discardCarts}\n                isApproved={false}\n            />\n            <div className=\"font-bold text-base text-red-500\">\n                Discount = {applyDiscount(approvedCarts).toFixed(2)}{' '}\n            </div>\n            <div className=\"font-bold text-base text-blue-800\">\n                You Pay: {(findTotalSum(approvedCarts) - applyDiscount(approvedCarts)).toFixed(2)}\n            </div>\n            <button\n                type=\"button\"\n                className=\"p-2 border rounded ahadow-2xl border-blue-800 hover:bg-blue-800 text-lg hover:text-white\"\n            >\n                Submit\n            </button>\n        </div>\n    );\n};\n\nexport default CartSummary;\n","import React, { useState, useContext, useEffect } from 'react';\nimport WishList from '../wishlist/wishList';\nimport CartContext from '../../context/cartContext';\nimport CartSummary from './cartSummary';\n\nconst FinalCart: React.FC<IFinalCartProps> = ({ setIsOpen, approveCart, approveProduct }) => {\n    const { carts } = useContext(CartContext);\n\n    //filters approved products in approved carts\n    const approveCarts = () => {\n        const x = carts.map((cart) => ({\n            ...cart,\n            products: cart.products.filter((product) => cart.isApproved && cart.isInCart && product.isApproved)\n        }));\n        const y = x.map((cart) =>\n            cart.products.filter((product) => product.isApproved === false).length !== 0 && cart.isApproved === true\n                ? { ...cart, isInCart: true }\n                : { ...cart }\n        );\n        return y;\n    };\n\n    //filters discarded products in discarded carts\n    const discardCarts = () => {\n        return carts.map((cart) => ({\n            ...cart,\n            products: cart.products.filter(\n                (product) => product.isApproved === false || cart.isApproved === false || cart.isInCart === false\n            )\n        }));\n    };\n\n    const approvedCarts: ICart[] = approveCarts();\n    const discardedCarts: ICart[] = discardCarts();\n\n    const [displayApprovedCart, setDisplayApprovedCart] = useState<ICart>(approvedCarts[0]);\n    const [displayDiscardedCart, setDisplayDiscardedCart] = useState<ICart>(discardedCarts[0]);\n\n    // slides carts display left\n    const slideLeft = (displayApprove: ICart, displayDiscard: ICart) => {\n        const index1 = approvedCarts.map((e) => e.id).indexOf(displayApprove.id);\n        const index2 = discardedCarts.map((e) => e.id).indexOf(displayDiscard.id);\n        index1 > 0\n            ? setDisplayApprovedCart(approvedCarts[index1 - 1])\n            : setDisplayApprovedCart(approvedCarts[approvedCarts.length - 1]);\n        index2 > 0\n            ? setDisplayDiscardedCart(discardedCarts[index2 - 1])\n            : setDisplayDiscardedCart(discardedCarts[discardedCarts.length - 1]);\n    };\n\n    // slides carts display left\n    const slideRight = (displayApprove: ICart, displayDiscard: ICart) => {\n        const index1 = approvedCarts.map((e) => e.id).indexOf(displayApprove.id);\n        const index2 = discardedCarts.map((e) => e.id).indexOf(displayDiscard.id);\n        index1 < approvedCarts.length - 1\n            ? setDisplayApprovedCart(approvedCarts[index1 + 1])\n            : setDisplayApprovedCart(approvedCarts[0]);\n        index2 < discardedCarts.length - 1\n            ? setDisplayDiscardedCart(discardedCarts[index2 + 1])\n            : setDisplayDiscardedCart(discardedCarts[0]);\n    };\n\n    useEffect(() => {\n        const x = approveCarts().filter((cart) => cart.id === displayApprovedCart.id)[0];\n        const y = discardCarts().filter((cart) => cart.id === displayDiscardedCart.id)[0];\n\n        setDisplayApprovedCart(x);\n        setDisplayDiscardedCart(y);\n    }, [carts]);\n\n    return (\n        <div>\n            <span className=\"left-0 top-0\">\n                <button\n                    onClick={() => setIsOpen(false)}\n                    className=\"group border rounded shadow-lg border-red-500 w-5 h-5 flex items-center justify-center focus:outline-none hover:bg-red-500\"\n                >\n                    <svg\n                        className=\"w-5 h-5 text-red-500 group-hover:text-white\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            stroke-width=\"2\"\n                            d=\"M6 18L18 6M6 6l12 12\"\n                        />\n                    </svg>\n                </button>\n            </span>\n            {carts.filter((cart) => cart.isInCart === true).length !== 0 ? (\n                <div className=\"flex flex-row justify-center items-start space-x-4 mt-2 mx-4\">\n                    <div className=\"flex flex-col justify-center\">\n                        <div className=\"text-center\">Approved carts</div>\n                        <div className=\"flex flex-row space-x-6 justify-between\">\n                            <div className=\"flex flex-row\">\n                                <div className=\"flex flex-row items-center justify-center\">\n                                    <button\n                                        onClick={() => slideLeft(displayApprovedCart, displayDiscardedCart)}\n                                        type=\"button\"\n                                        className={`border visible rounded-full flex items-center justify-center bg-gray-200 hover:bg-blue-800 hover:text-white focus:outline-none`}\n                                    >\n                                        <svg\n                                            className=\"w-6 h-6\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            fill=\"none\"\n                                            stroke=\"currentColor\"\n                                            viewBox=\"0 0 24 24\"\n                                        >\n                                            <path\n                                                stroke-linecap=\"round\"\n                                                stroke-linejoin=\"round\"\n                                                stroke-width=\"2\"\n                                                d=\"M15 19l-7-7 7-7\"\n                                            />\n                                        </svg>\n                                    </button>\n                                </div>\n                                <div className=\"flex items-center\">\n                                    <div>\n                                        <WishList\n                                            cart={displayApprovedCart}\n                                            approveCart={approveCart}\n                                            approveProduct={approveProduct}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"flex flex-col justify-center items-center\">\n                        <div>Discarded carts</div>\n                        <div className=\"flex flex-row\">\n                            <div className=\"flex items-center\">\n                                <WishList\n                                    cart={displayDiscardedCart}\n                                    approveCart={approveCart}\n                                    approveProduct={approveProduct}\n                                />\n                            </div>\n                            <div className=\"flex items-center justify-center\">\n                                <button\n                                    onClick={() => slideRight(displayApprovedCart, displayDiscardedCart)}\n                                    type=\"button\"\n                                    className={`border visible\n                         rounded-full flex items-center justify-center bg-gray-200 hover:bg-blue-800 hover:text-white focus:outline-none`}\n                                >\n                                    <svg\n                                        className=\"w-6 h-6\"\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        fill=\"none\"\n                                        stroke=\"currentColor\"\n                                        viewBox=\"0 0 24 24\"\n                                    >\n                                        <path\n                                            stroke-linecap=\"round\"\n                                            stroke-linejoin=\"round\"\n                                            stroke-width=\"2\"\n                                            d=\"M9 5l7 7-7 7\"\n                                        />\n                                    </svg>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"w-full\">\n                        <CartSummary\n                            approveCarts={approveCarts}\n                            discardCarts={discardCarts}\n                            approvedCarts={approvedCarts}\n                        />\n                    </div>\n                </div>\n            ) : (\n                <div className=\"text-red-500 text-center h-1/2 p-48 flex flex-col space-y-10 text-lg\">\n                    <div className=\"flex flex-row space-x-4 items-center justify-center\">\n                        <svg\n                            className=\"w-24 h-24 text-blue-800\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                        >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                stroke-width=\"2\"\n                                d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\"\n                            />\n                        </svg>\n                        <div>Your cart is empty</div>\n                    </div>\n                    <div className=\"h-screen-1/2 flex flex-row space-x-4 items-center\">\n                        <div>Please approve the wishlists from the main page</div>\n                        <button\n                            type=\"button\"\n                            onClick={() => setIsOpen(false)}\n                            className=\"p-1 hover:bg-blue-800 hover:text-white border rounded border-blue-800 text-blue-800\"\n                        >\n                            Click here\n                        </button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default FinalCart;\n","/* eslint-disable prefer-const */\nimport React, { useContext, useState } from 'react';\nimport Modal from 'react-modal';\nimport CartContext from '../../context/cartContext';\nimport { selectMinProduct } from '../../functions/selectEqual';\nimport FinalCart from '../modals/finalCart';\n\nconst Criterias: React.FC<IComponentProps> = ({ criteria, setCriteria, setFeedback, approveCart, approveProduct }) => {\n    const { carts, setCarts } = useContext(CartContext);\n    const list = localStorage.getItem('CartList');\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n    Modal.setAppElement('#root');\n\n    const openModal = () => {\n        setIsOpen(true);\n    };\n\n    const closeModal = () => {\n        setIsOpen(false);\n    };\n\n    const oldCarts = list\n        ? JSON.parse(list).map((cart: ICart) => ({\n              ...cart,\n              isApproved: true\n          }))\n        : '';\n    // selects only favourite gifts from all of the carts\n    const selectFavourites = () => {\n        const favourites = carts.map((cart) => ({\n            ...cart,\n            isApproved: true,\n            products: cart.products.map((product) =>\n                product.isFavourite === true ? { ...product, isApproved: true } : { ...product, isApproved: false }\n            )\n        }));\n        setCarts([...favourites]);\n        setFeedback('');\n        setCriteria('Only favourite gifts selected from the all the wishlists');\n    };\n\n    // selects all gifts of only well-behaved children from their wishlists\n\n    const selectBehaved = () => {\n        const wellbehaved = carts.map((cart) =>\n            cart.isWellBehaved === true\n                ? {\n                      ...cart,\n                      isApproved: true,\n                      products: cart.products.map((product) => ({ ...product, isApproved: true }))\n                  }\n                : { ...cart, isApproved: false }\n        );\n        setCarts([...wellbehaved]);\n        setFeedback('');\n        setCriteria('Wishlist of only well behaved children approved.');\n    };\n\n    //selects equal number of gifts from the wishlists\n    const optimizeEqualNumber = (oldCarts: ICart[]) => {\n        const updatedCarts = oldCarts.map(\n            (cart: ICart) => selectMinProduct(cart, oldCarts).filter((selected) => selected.id === cart.id)[0]\n        );\n        const itemsArray = updatedCarts.map(\n            (cart) => cart.products.filter((product) => product.isApproved === true).length\n        );\n        const isEqual = itemsArray.every((value) => value !== 0 && value === itemsArray[0]);\n        if (!isEqual) {\n            optimizeEqualNumber(updatedCarts);\n        }\n        setCarts([...updatedCarts]);\n        setFeedback('');\n\n        setCriteria('Equal number of gifts with mimimum total price approved from the wishlists ');\n    };\n\n    return (\n        <div className=\"flex flex-row justify-between mx-10 items-center\">\n            <div className=\"flex flex-row justify-center items-center m-2 space-x-4\">\n                <div className=\" text-center\">Select cart products:</div>\n                <div className=\"flex flex-row justify-between space-x-4\">\n                    <button\n                        onClick={selectFavourites}\n                        type=\"button\"\n                        className=\"p-2 text-blue-400 hover:bg-blue-800 hover:text-white  text-sm w-20 border rounded shadow-lg border-blue-400 hover:border-blue-800 focus:outline-none\"\n                    >\n                        Favorite\n                    </button>\n                    <button\n                        onClick={() => optimizeEqualNumber(oldCarts)}\n                        type=\"button\"\n                        className=\"p-2 text-blue-400 hover:bg-blue-800 hover:text-white  text-sm w-20 border rounded shadow-lg border-blue-400 hover:border-blue-800 focus:outline-none\"\n                    >\n                        Equal\n                    </button>\n                    <button\n                        onClick={selectBehaved}\n                        type=\"button\"\n                        className=\"p-2 text-blue-400 hover:bg-blue-800 hover:text-white  text-sm w-20 border rounded shadow-lg border-blue-400 hover:border-blue-800 focus:outline-none\"\n                    >\n                        Behaved\n                    </button>\n                </div>\n                <div className=\"text-red-500 text-sm\">{criteria}</div>\n            </div>\n            <button\n                onClick={openModal}\n                type=\"button\"\n                className=\"group w-11 h-11 border-2 rounded border-blue-400 hover:bg-blue-800 hover:text-white hover:border-blue-800 flex items-center justify-center focus:outline-none\"\n            >\n                <div className=\"absolute right-5 w-6 h-6 top-1 border rounded-full bg-red-500 text-white flex items-center justify-center\">\n                    <div>\n                        {\n                            carts.filter(\n                                (cart) =>\n                                    cart.isInCart === true &&\n                                    cart.products.filter((product) => product.isApproved === true).length !== 0\n                            ).length\n                        }\n                    </div>\n                </div>\n                <svg\n                    className=\"w-7 h-7 text-blue-400 group-hover:text-white text-center\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                >\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\"\n                    />\n                </svg>\n            </button>\n            <Modal\n                isOpen={isOpen}\n                onRequestClose={closeModal}\n                overlayClassName=\"fixed inset-0 flex justify-center items-center bg-blue-800 bg-opacity-75\"\n                className=\"relative bg-white overflow-y-auto rounded-lg focus:outline-none w-5/6\"\n            >\n                <FinalCart\n                    setIsOpen={setIsOpen}\n                    isOpen={isOpen}\n                    approveCart={approveCart}\n                    approveProduct={approveProduct}\n                />\n            </Modal>\n        </div>\n    );\n};\n\nexport default Criterias;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './assets/main.css';\nimport WishListArray from './components/wishlist';\nimport Criterias from './components/criteria';\nimport CartContext from './context/cartContext';\n\nconst App = (): JSX.Element => {\n    const [carts, setCarts] = useState<ICart[]>([]);\n    const [feedback, setFeedback] = useState<string>('');\n    const [criteria, setCriteria] = useState<string>('');\n    const [loading, setLoading] = useState<boolean>(true);\n\n    //fetches data from api\n    const getProduct = async (product: IProduct) => {\n        try {\n            const p = await axios.get(`https://fakestoreapi.com/products/${product.productId}`);\n\n            product.title = p.data.title;\n            product.image = p.data.image;\n            product.price = p.data.price;\n            return product;\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    // selects cart\n    const approveCart = (selectedCart: ICart) => {\n        const myCarts: ICart[] = [...carts];\n        const arrLength = selectedCart.products.filter((product) => product.isApproved === true).length;\n        setCriteria('');\n\n        for (let i = 0; i < myCarts.length; i++) {\n            if (selectedCart.id == myCarts[i].id && arrLength !== 0) {\n                if (myCarts[i].isApproved === true) {\n                    myCarts[i] = {\n                        ...myCarts[i],\n                        isApproved: false,\n                        products: myCarts[i].products.map((product) => ({ ...product, isApproved: false }))\n                    };\n                    setFeedback(`Cart of child ${selectedCart.id} is unselected`);\n                } else if (myCarts[i].isApproved === false) {\n                    myCarts[i] = { ...myCarts[i], isApproved: true };\n\n                    setFeedback(`Cart of child ${selectedCart.id}  is selected. Click add button to add it to cart`);\n                }\n            } else if (selectedCart.id == myCarts[i].id && arrLength == 0) {\n                setFeedback(\n                    `Selection error!! Please select at least gift item from the wishlist of child ${selectedCart.id}.`\n                );\n            }\n        }\n        setCarts(myCarts);\n    };\n\n    //selects product\n    const approveProduct = (productId: number, cartId: number) => {\n        const updatedCarts = carts.map((cart) =>\n            cart.id === cartId\n                ? {\n                      ...cart,\n                      products: cart.products.map((product) =>\n                          product.productId === productId\n                              ? { ...product, isApproved: product.isApproved === true ? false : true }\n                              : { ...product }\n                      )\n                  }\n                : { ...cart }\n        );\n        const updateByProduct = updatedCarts.map((cart) =>\n            cart.id === cartId && cart.products.filter((product) => product.isApproved === true).length === 0\n                ? { ...cart, isApproved: false }\n                : { ...cart }\n        );\n        setCarts([...updateByProduct]);\n        setCriteria('');\n        setFeedback(`1 product edited in wishlist of child ${cartId}`);\n    };\n\n    useEffect(() => {\n        (async (): Promise<void> => {\n            try {\n                const data = await axios.get('https://fakestoreapi.com/carts?limit=5');\n\n                const cartData = data.data.map((cart: ICart) => {\n                    const productArray = cart.products.map((product) => getProduct(product));\n                    (async function () {\n                        for await (const val of productArray) {\n                            return val;\n                        }\n                    })();\n                    setLoading(false);\n\n                    return {\n                        ...cart\n                    };\n                });\n\n                // added additional properties to the cart and product arrays to facilitate the selection and approval of carts and products\n                setTimeout(function () {\n                    const updatedData = cartData.map((cart: ICart, cartIndex: number) => ({\n                        ...cart,\n                        isApproved: false,\n                        isWellBehaved: cartIndex === 1 || cartIndex === 3 ? true : false,\n                        isInCart: false,\n                        products: cart.products.map((product, productIndex) => ({\n                            ...product,\n                            isApproved: false,\n                            isFavourite: productIndex === 0 ? true : false\n                        }))\n                    }));\n                    localStorage.setItem('CartList', JSON.stringify(updatedData));\n                    setCarts([...updatedData]);\n                }, 3000);\n            } catch (error) {\n                console.log(error);\n            }\n        })();\n    }, []);\n\n    return (\n        <div className=\"w-full h-full\">\n            {!loading ? (\n                <CartContext.Provider value={{ carts, setCarts }}>\n                    <div className=\"flex flex-col space-y-16 mb-10\">\n                        <Criterias\n                            criteria={criteria}\n                            setCriteria={setCriteria}\n                            feedback={feedback}\n                            setFeedback={setFeedback}\n                            approveCart={approveCart}\n                            approveProduct={approveProduct}\n                        />\n                        <WishListArray\n                            criteria={criteria}\n                            setCriteria={setCriteria}\n                            feedback={feedback}\n                            setFeedback={setFeedback}\n                            approveCart={approveCart}\n                            approveProduct={approveProduct}\n                        />\n                    </div>\n                </CartContext.Provider>\n            ) : (\n                <div className=\"flex justify-center items-center m-56 text-lg\">\n                    <div className=\"flex flex-col justify-center\">\n                        <div className=\"animate-spin w-5 h-5\">\n                            <svg\n                                className=\"fill-current text-red-500 \"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 20 20\"\n                            >\n                                <path d=\"M14.66 15.66A8 8 0 1117 10h-2a6 6 0 10-1.76 4.24l1.42 1.42zM12 10h8l-4 4-4-4z\" />\n                            </svg>\n                        </div>\n                        <div>Loading page .....</div>\n                        <div>This may take a few seconds, please don't close the page.</div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}